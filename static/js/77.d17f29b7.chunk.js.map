{"version":3,"file":"static/js/77.d17f29b7.chunk.js","mappings":"iLAwEA,UAnEmB,SAAC,GAAsB,IAAD,sBAApBA,EAAoB,EAApBA,QAASC,EAAW,EAAXA,MAC1B,GAAkCC,EAAAA,EAAAA,UAAS,IAA3C,eAAOC,EAAP,KAAkBC,EAAlB,MAI2BC,EAAAA,EAAAA,UAAS,cAFV,kBAAMC,MAAM,kCAAD,OAAmCN,EAAnC,gBAAyDO,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAAQF,MAAK,SAAAC,GAAG,OAAIJ,EAAaI,QAE1E,CACjEE,sBAAsB,EACtBC,UAAW,IAFRC,KAKPC,EAAAA,GAAAA,SACIC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,EACAC,EAAAA,IAGJ,IAqBMC,EAAU,CACZC,OAAQ,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,MACtDC,SAAU,CACR,CACEC,MAAO,cACPX,KA1Ba,OAAGT,QAAH,IAAGA,GAAH,UAAGA,EAAWS,YAAd,iBAAG,EAAiBY,cAApB,aAAG,EAAyBC,KAAI,SAAAC,GAAK,OAAIA,EAAMC,SA2B5DC,YAAa,uBACbC,gBAAiB,0BAKzB,OACI,4BACI,eAAIC,UAAU,qBAAd,yBACA,gBAAIA,UAAU,gDAAd,2BAA+E,UAAA3B,EAAUS,YAAV,SAAgBmB,UAAW,eAAID,UAAU,kDAAd,SAAiE3B,EAAUS,KAAKmB,YAAiB,oCAC3M,gBAAID,UAAU,2CAAd,4BAA2E,UAAA3B,EAAUS,YAAV,SAAgBoB,WAAY,eAAIF,UAAU,kDAAd,SAAiE3B,EAAUS,KAAKoB,aAAkB,oCACzM,gBAAIF,UAAU,2CAAd,0BAAyE,UAAA3B,EAAUS,YAAV,SAAgBqB,SAAU,eAAIH,UAAU,kDAAd,SAAiE3B,EAAUS,KAAKqB,WAAgB,oCACnM,gBAAIH,UAAU,2CAAd,0BAAyE,UAAA3B,EAAUS,YAAV,SAAgBsB,SAAU,eAAIJ,UAAU,kDAAd,SAAiE3B,EAAUS,KAAKsB,WAAgB,oCACnM,gBAAIJ,UAAU,2CAAd,gCAAwF,OAAT3B,QAAS,IAATA,GAAA,UAAAA,EAAWS,YAAX,SAAiBuB,eAAgB,eAAIL,UAAU,kDAAd,SAAiE3B,EAAUS,KAAKuB,iBAAsB,oCACtN,gBAAIL,UAAU,2CAAd,wBAAuE,UAAA3B,EAAUS,YAAV,SAAgBwB,OAAQ,eAAIN,UAAU,kDAAd,SAAiE3B,EAAUS,KAAKwB,SAAc,oCAC7L,gBAAIN,UAAU,8EAAd,oBAA6F7B,EAAMW,YAAnG,aAA6F,EAAYyB,MAAzG,qBAAwHpC,EAAMW,YAA9H,aAAwH,EAAYc,MAApI,kBAAgJzB,EAAMW,YAAtJ,aAAgJ,EAAY0B,UAA5J,aACA,SAAC,KAAD,CAAK1B,KAAMQ,EAASmB,QAzCZ,CACZC,UAAW,IACXC,SAAU,CACRC,IAAK,CACHC,YAAa,IAGjBC,YAAY,EACZC,QAAS,CACPC,OAAQ,CACNC,SAAU,SAEZV,MAAO,CACLW,SAAS,EACTC,KAAM,iBA2BgCnB,UAAU","sources":["components/Statistics.js"],"sourcesContent":["import React, { useState } from 'react'\r\nimport { useQuery } from 'react-query'\r\nimport { Chart as ChartJS, Tooltip, Legend, CategoryScale, LinearScale, BarElement, Title} from 'chart.js';\r\nimport { Bar } from 'react-chartjs-2';\r\n\r\nconst Statistics = ({animeID, anime}) => {\r\n    const [chartData, setChartData] = useState([])\r\n\r\n    const fetcherStatistics = () => fetch(`https://api.jikan.moe/v4/anime/${animeID}/statistics`).then(res => res.json()).then(res => setChartData(res))\r\n\r\n    const {data: statistics} = useQuery(\"statistics\", fetcherStatistics, {\r\n        refetchOnWindowFocus: false,\r\n        cacheTime: 0\r\n    })\r\n\r\n    ChartJS.register(\r\n        CategoryScale,\r\n        LinearScale,\r\n        BarElement,\r\n        Title,\r\n        Tooltip,\r\n        Legend\r\n      );\r\n\r\n    const scorePercentage = chartData?.data?.scores?.map(score => score.votes)\r\n\r\n    const options = {\r\n        indexAxis: 'y',\r\n        elements: {\r\n          bar: {\r\n            borderWidth: 2,\r\n          },\r\n        },\r\n        responsive: true,\r\n        plugins: {\r\n          legend: {\r\n            position: 'right',\r\n          },\r\n          title: {\r\n            display: false,\r\n            text: 'Score Stats',\r\n          },\r\n        },\r\n      };\r\n\r\n    const barData = {\r\n        labels: [\"1\", \"2\" ,\"3\" ,\"4\" ,\"5\", \"6\", \"7\", \"8\" ,\"9\" ,\"10\"],\r\n        datasets: [\r\n          {\r\n            label: '# of Scores',\r\n            data: scorePercentage,\r\n            borderColor: 'rgba(255,130,80,155)',\r\n            backgroundColor: 'rgba(255,103,64,255)',\r\n          },\r\n        ],\r\n      };\r\n\r\n    return (\r\n        <div>\r\n            <h1 className='text-3xl font-bold'>Statistics</h1> \r\n            <h1 className='mt-4 flex  font-semibold items-center text-xl'>Watching:&nbsp; {chartData.data?.watching ? <h1 className='bg-liteGrey px-2 rounded-lg font-normal text-lg'>{chartData.data.watching}</h1> : <h1>N/A</h1>}</h1>\r\n            <h1 className='flex  font-semibold items-center text-xl'>Completed:&nbsp; {chartData.data?.completed ? <h1 className='bg-liteGrey px-2 rounded-lg font-normal text-lg'>{chartData.data.completed}</h1> : <h1>N/A</h1>}</h1>\r\n            <h1 className='flex  font-semibold items-center text-xl'>On Hold:&nbsp; {chartData.data?.on_hold ? <h1 className='bg-liteGrey px-2 rounded-lg font-normal text-lg'>{chartData.data.on_hold}</h1> : <h1>N/A</h1>}</h1>\r\n            <h1 className='flex  font-semibold items-center text-xl'>Dropped:&nbsp; {chartData.data?.dropped ? <h1 className='bg-liteGrey px-2 rounded-lg font-normal text-lg'>{chartData.data.dropped}</h1> : <h1>N/A</h1>}</h1>\r\n            <h1 className='flex  font-semibold items-center text-xl'>Plan To Watch:&nbsp; {chartData?.data?.plan_to_watch ? <h1 className='bg-liteGrey px-2 rounded-lg font-normal text-lg'>{chartData.data.plan_to_watch}</h1> : <h1>N/A</h1>}</h1>\r\n            <h1 className='flex  font-semibold items-center text-xl'>Total:&nbsp; {chartData.data?.total ? <h1 className='bg-liteGrey px-2 rounded-lg font-normal text-lg'>{chartData.data.total}</h1> : <h1>N/A</h1>}</h1>\r\n            <h1 className='flex justify-center font-semibold items-center text-2xl mt-8 mb-4 flex-wrap'>{anime.data?.title} Score [{anime.data?.score}] of {anime.data?.scored_by} Votes</h1>\r\n            <Bar data={barData} options={options} className=\"min-w-[600px]\" />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Statistics"],"names":["animeID","anime","useState","chartData","setChartData","useQuery","fetch","then","res","json","refetchOnWindowFocus","cacheTime","data","ChartJS","CategoryScale","LinearScale","BarElement","Title","Tooltip","Legend","barData","labels","datasets","label","scores","map","score","votes","borderColor","backgroundColor","className","watching","completed","on_hold","dropped","plan_to_watch","total","title","scored_by","options","indexAxis","elements","bar","borderWidth","responsive","plugins","legend","position","display","text"],"sourceRoot":""}